// ==================================================================================
// =================== Додавання/видалення/зміна класів =============================
// ==================================================================================
const btns = document.querySelectorAll('button');
// console.log(btns[0].classList.length); // к-ть класів у першого елементу М кнопок
// console.log(btns[0].classList.item(0)); // дізнаємося наявність класу
// console.log(btns[0].className); // дізнаємося наявність усіх класів. !!!Застарілий спосіб!!!

// ----------------------------------------------------------------------------------
// console.log(btns[0].classList.add('red', 'someClass')); // додаємо новий,-i клас із збереженням попередніх
console.log(btns[1].classList.add('red'));     //додаємо клас
console.log(btns[0].classList.remove('blue')); // видаляємо вказаний клас
console.log(btns[0].classList.toggle('blue')); // видаляє/добавляє клас - перемикач
// ----------------------------------------------------------------------------------

// спосіб який допомагає визначати наявність класу на конкретному елементі і повертає булеве значення.
/* if(btns[1].classList.contains('red')) {
  console.log('red');
} */


// спосіб який допомагає змінювати класи в другого елемента по кліку на перший
btns[0].addEventListener('click', () => { 
  // if (!btns[1].classList.contains('red')) { // перевіріє на наявність класу
  //   btns[1].classList.add('red'); // якщо класу немає (умова вірна), то додаємо
  // } else {
  //   btns[1].classList.remove('red'); // якщо клас присутній (умова невірна), то видаляємо
  // }

  // АБО
  // btns[1].classList.toggle('red');
});



// ===========================================================================
// ============================ Делегування подій ============================
// ===========================================================================
const wrapper = document.querySelector('.btn-block'); // батько кнопок

wrapper.addEventListener('click', (event) => {
  // в html не всі елементи підтримують подію кліка, тому додатково перевіряємо наявність в елем. event.target
  // if (event.target && event.target.classList.contains('blue') == 'BUTTON') {
  //   console.log('click');
  // }
  // - перевіріє чи є в елемента даний клас, якщо є то делегується подія з батька на потомка
  if (event.target && event.target.tagName == 'BUTTON') {
    console.log('hello');
  }
});

const btn = document.createElement('button'); // створюємо елем.
btn.classList.add('red'); // додаємо клас для елем. 
wrapper.append(btn); // поміщає новостворену кнопоку в wrapper (батько) і там їй делекується подія


// =========================================================
// ============== Делегування подій перебором ==============
// =========================================================
// Але він не працює із новостворенимим елементами, так як нічого про них незнає
// btns.forEach (btn => {
//   btn.addEventListener('click', () => {
//     console.log('Hello');
//   });
// });



// =========================================================
// ================= Делегування подій 2 ===================
// =========================================================
/* wrapper.addEventListener('click', (event) => {
  if(event.target && event.target.matches('button.red')) {
    console.log('делегування подій тест2');
  }
}); */

// метод matches якийсь елемент буде з чимось співпадати