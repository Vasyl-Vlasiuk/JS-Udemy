 "use strict";

// ==================================================================
// ======================= МЕТОДИ МАСИВІВ ===========================
// ==================================================================
// const arr = [2, 4, 6, 8, 9];

// arr.pop(); // видаляє останній елемент масиву
// arr.push(10); // добавляє елемент в кінець масиву
// console.log(arr);

// _______________ формування масиву на основі строк ________________
/* const str = prompt('введіть продукти через кому', '');
const products = str.split(', ');
console.log(products); */

// _______________ Формування строки із масиву ______________________
// const str = prompt('введіть дані через ;', '');
// const products = str.split(', ');
// console.log(products.join('; ')); // app.js:20 aaa; bbb; ccc; ddd
// вказуємо розділювач join('; ') через який будуть виводитися елементи на сторінку

// ________________________ Сортування ______________________________
// Строки ___________________________________________________________
// const products = ['ddd', 'aaa', 'ccc', 'bbb'];
// products.sort(); // завжди сортує масив як строки
// console.log(products);

// Цифри ____________________________________________________________
// const num = [8, 2, 4, 10, 18];
// num.sort(); 
// console.log(num); // [10, 18, 2, 4, 8] таке сортування, зумовленно методом який сортує все як строки
// цього можна уникнути, метод сорт приймає калбек ф-ію. Тому ми скажемо як саме сортувати

// num.sort(compareNum); 
// function compareNum(a, b) {
//   return a - b;
// }
// console.log(num); // 2, 4, 8, 10, 18


// ==================================================================
// ======================== Довжина масиву ==========================
// ==================================================================
// const arrLength = [5, 6, 7, 8, 9]; 
// arrLength[99] = 0;
// // Якщо добавити на 99 індекс значення,  то довжина масиву буде індекс +1
// console.log(arrLength.length); // 100
// console.log(arrLength);  //[ 5, 6, 7, 8, 9, <94 empty items>, 0 ]
// //!!так не можна  робити, бо порушується логіка і властивість lenght показує неправильне значення





// ==================================================================
// ========================= МЕТОДИ ПЕРЕБОРУ ========================
// ==================================================================
// ============================= FOR ================================
// const arr = [2, 4, 6, 8, 9];
// for (let i = 0; i < arr.length; i++) {
//   console.log(arr[i]);
// }
// ============================ FOR OF ==============================
// const arr = [2, 4, 6, 8, 9];
// for (let value of arr) {
//   console.log(value);
// }
// // У метода for of є плюс, бо можемо використовувати breck і continue 

// ======================= метод FOR EACH ===========================
const arr = [2, 4, 6, 8, 9];
arr.forEach(function(item, i, arr) {
// item - перебираючий елемент, і - номер по порядку, перебираючий масив
  console.log(`${i}: ${item} всередині масиву ${arr}`);
});

// ====================== метод трансормації ========================
// arr/map
// arr.every/some
// arr filter
// arr.reduce
// таким чином можна перебрати строку, масив, псевдомасив, map і set
