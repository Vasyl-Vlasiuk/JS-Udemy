"use strict";

// const obj = new Object(); для створення об'єктів краще не використовувати таку конструкцію

const options = {
  name: 'test',
  width: 1024,
  height: 1024,
  colors: {
    border: 'black',
    bg: 'red'
  },
  makeTest: function() {
    console.log('test');
  }
};

// options.makeTest(); для того аби запустити метод
// console.log(options.name); // вивести властивість в консоль

// delete options.name; // метод який видаляє властивість, якщо необхідно видалити велику к-ть властивостей, то використовуємо цикл

// даний перебор виводить ключ: значення
// for (let key in options) {
//   //                        ключ                 значення ключа
//   console.log(`Властивість ${key}, має значення ${options[key]}`);
// }
// Властивість width, має значення 1024
// Властивість height, має значення 1024
// Властивість colors, має значення [object Object]. 
// Властивість color являється об'єктом, тому ми не можемо вивести об'єкт у вигляді строки.
// В такому випадку скористаємося умовою, і якшщо цикл наткнеться на обєкт, то в об'єкті спрацює інший цикл який його перебере


// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// !!!!!!!!!!!!!!!!! Патерн для перебору об'єкту !!!!!!!!!!!!!!!!!!!
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
/* for (let key in options) {
  if (typeof(options[key]) === 'object') {
    for (let i in options[key]) {
      console.log(`Властивість ${i}, має значення ${options[key][i]}`);
    }
  } else { 
      console.log(`Властивість ${key} має значення ${options[key]}`);
  }
} */


// ==================================================================
// ======= Функції та методи які є вже в середині об'єкту ===========
// ==================================================================

console.log(Object.keys(options).length); // метот бере О і на його основі створює М в якому усі елементи це ключі із О.
// А так як у М є властивість lenght, то ми можемо дізнатися довжину О.

// методи - це дії які вміє виконувати наш О


// ==================================================================
// =================== Деструктуризаці обєктів ======================
// ==================================================================
const {border, bg} = options.colors; // витягуємо із структури options.colors в перемінні border і bg, ті значення які нам необхідні.
console.log(options.colors); // { border: 'black', bg: 'red' }