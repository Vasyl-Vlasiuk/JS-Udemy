"use strict";

// 1 _____________________________________________________________
// let x = 5; alert(x++); // 5 тому що це постфіксна форма, сперш вертає результат а потім збільшує на 1


// 2 _____________________________________________________________
// console.log([] + false - null + true);
// [] - пустий масив = строковий тип даних (пуста строка ''), якщо скласти пусту строку з будьяким іншим типом даних, то буде строка
// null - якщо проводити операції з даним типом, то отримаємо NaN
// отримаємомо NaN тому що відбулася конкатеннаці зі пустою строкою у вигляді [] - (false).


// 3 _____________________________________________________________
// let b = 1; let a = b = 2; alert(a); // 2


// 4 _____________________________________________________________
// console.log([] + 1 + 2); // '12'
 

// 5 _____________________________________________________________
// alert('1'[0]); // 1
// до кожного елемента строки можна звернутися по його індексу


// 5 _____________________________________________________________
//            true   true   false    false      false
// console.log(2  &&  1  &&  null  &&  0  &&  undefined); // null
// && затинається на брехні і вертає її
// || затинається на правді і вертає її


// 6 _____________________________________________________________
// console.log(!!(1 && 2) === (1 && 2)); // false
// !! - перетворють наступний вираз у булевий, тому булеве значення не рівняється наступному виразу (1 && 2)


// 7 _____________________________________________________________
// alert( null || 2 && 3 || 4 ); // 3 
// Більший пріорітет має && тому сперш порівнюється пара 2 && 3, де повернеться 3. Потім null || 3 повернеться теж 3. 
// Потім 3 || 4, де також повернеться 3. Так як || вертає перше правдиве значення. 


// 8 _____________________________________________________________
// a == b? // не рівні false, тому що змінні різні, а значення не беруться до уваги
// const a = [1, 2, 3];
// const b = [1, 2, 3];


// 9 _____________________________________________________________
// alert( +"Infinity"); // Виведеться Infinity з типом даних число



// 10 _____________________________________________________________
// console.log('Їжак' > 'яблоко'); // Посимвольне зрівняння, потрібно відкрити юнікод і подивитися пріорітети символів  


// 11 _____________________________________________________________
//          false  true
console.log(0 || "" || 2 || undefined || true || false); // 2
// коли є || то js знаходить перший правдиве значення і виводить його